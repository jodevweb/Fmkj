#!/usr/bin/php
<?php

/**
 * Fmkj Framework
 *
 * Console
 *
 *
 */

 include_once('../Config/parameters.php');
 include_once('../autoload.php');

if (count($argv) <= 1 || in_array($argv[1], array('--help', '-help', '-h', '-?'))) { ?>

    Cette ligne de commande possede une option.

    Utilisation :
    php <?php echo $argv[0]; ?> <option>

    <option> peut etre un mot que vous souhaitez afficher.
        Avec les options --help, -help, -h,
        et -?, vous obtiendrez cette aide.

    <?php
} else {
    if ($argv[1] == "route") {

        echo "\n###################################\nListe des routes disponible : \n###################################\n\n";


        $AllControllers = array_diff(scandir('../..' . $dir_project . $dir_controllers), array('..', '.'));

        if ($module['name']) {
            foreach ($module['name'] as $modules) {
                $AllControllersModule = array_diff(scandir('../..' . $dir_project . 'App/Modules/' . $modules . '/Controllers/'), array('..', '.'));
            }
        }

        foreach ($AllControllers as $Controllers) {
            $Class = substr($Controllers, 0, strlen($Controllers) - 14);
            $Fichier = substr($Controllers, 0, strlen($Controllers) - 4);
            require_once('../../' . $dir_project . $dir_controllers . '/' . $Fichier . '.php');

            $RouteAll = get_class_methods('\\Controllers\\' . $Fichier . '\\' . $Class);

            foreach($RouteAll as $Routes)
            {
                if (strpos($Routes, 'Route'))
                {
                    echo '- ' . substr($Routes, 0, strlen($Routes) - 5)." (Controller : ".$Fichier." | Class : ".$Class.")\n";
                }
            }
        }

        foreach ($AllControllersModule as $Controllers) {
            $Class = substr($Controllers, 0, strlen($Controllers) - 14);
            $Fichier = substr($Controllers, 0, strlen($Controllers) - 4);
            require_once('../../' . $dir_project . 'App/Modules/' . $modules . '/Controllers/' . $Fichier . '.php');

            $RouteAll = get_class_methods('\\Module\\Controllers\\' . $Fichier . '\\' . $Class);

            foreach($RouteAll as $Routes)
            {
                if (strpos($Routes, 'Route'))
                {
                    echo '- ' . substr($Routes, 0, strlen($Routes) - 5)." (Controller : ".$Fichier." | Class : ".$Class.")\n";
                }
            }
        }
    }
    if ($argv[1] == "create") {
      if (!empty($argv[2])) {
        if ($argv[2] == "route") {
          if (!empty($argv[3]) AND !empty($argv[4])) {

            $newcode = "
    public function ".$argv[4]."Route()
    {

    }
            ";


            $fichier = fopen ('../../' . $dir_project . $dir_controllers . '/' . $argv[3].'.php', "a+");
            fwrite($fichier, $newcode);
            fseek($fichier, 0);
            fclose ($fichier);


            echo "\n Vous souhaitez creer une route dans le controller ".$argv[3]." qui a pour nom ".$argv[4]."\n";
          } else {
            echo "\n Il manque au moins un argument pour utiliser la commande 'console create route'";
          }
        }
      } else {
        echo "\n la commande 'console create' possede un deuxieme argument obligatoire.";
      }
    }
}
?>
